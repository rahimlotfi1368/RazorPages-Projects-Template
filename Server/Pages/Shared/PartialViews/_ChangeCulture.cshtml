@inject Microsoft.Extensions.Options.IOptions<Infrastructure.Settings.ApplicationSettings>? applicationSettingOptions
@{
	var applicationSettings=applicationSettingOptions?.Value;

	if (applicationSettings==null)
	{
		return;
	}

	var cultureSettings=applicationSettings.CultureSettings;
	
	if (cultureSettings==null)
	{
		return;
	}

	var suportedCultureNames = applicationSettingOptions?.Value.CultureSettings?.SupportedCultureNames;

	if (suportedCultureNames==null || suportedCultureNames.Length<=1)
	{
		return;
	}

	var CurrentCultureName = System.Threading.Thread.CurrentThread.CurrentUICulture.Name;
}
<div class="d-flex">
	@{
		foreach (var suportedCultureName in suportedCultureNames)
		{
			var supportedCulture = new System.Globalization.CultureInfo(suportedCultureName);
			var country = suportedCultureName[3..].ToLower();
			var language = supportedCulture.NativeName[..(supportedCulture.NativeName.IndexOf('(') - 1)];
			if (CurrentCultureName!=suportedCultureName)
			{
				<a href="/ChangeCulture/@(suportedCultureName)" class="d-block nav-link text-dark">
					@(language)
					<span class="fi fi-@(country)"></span>
				</a>
			}

		}
	}
</div>
