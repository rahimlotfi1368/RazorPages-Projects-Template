@inject Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.RequestLocalizationOptions>? requestLocalizationOptions
@{
	if (requestLocalizationOptions==null || requestLocalizationOptions.Value==null)
	{
		return;
	}

	var suportedCultures = requestLocalizationOptions.Value.SupportedUICultures;

	if (suportedCultures==null || suportedCultures.Count<=1)
	{
		return;
	}
	var CurrentCultureName = System.Threading.Thread.CurrentThread.CurrentUICulture.Name;
}
<div class="d-flex">
	@{
		foreach (var item in suportedCultures)
		{
			var country = item.Name[3..].ToLower();
			var language = item.NativeName[..(item.NativeName.IndexOf('(') - 1)];
			if (CurrentCultureName!=item.Name)
			{
				<a href="/ChangeCulture/@(item.Name)" class="d-block nav-link text-dark">
					@(language)
					<span class="fi fi-@(country)"></span>
				</a>
			}

		}
	}
</div>
